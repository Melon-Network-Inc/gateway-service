{
    "swagger": "2.0",
    "info": {
        "description": "This is backend server for Melon Wallet.",
        "title": "Melon Wallet Service API",
        "contact": {
            "name": "API Support",
            "url": "https://melonnetwork.io",
            "email": "support@melonnetwork.io"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/whitelist/email/{email}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.WhitelistUserInfo"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Get whitelist user records by email",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Email Address",
                        "name": "email"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Get whitelist user records by email",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-record-by-email"
            }
        },
        "/news/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/entity.News"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query news by page",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Query news by page",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-news"
            }
        },
        "/account/restoreBackup": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RestoreCloudBackupResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Restore cloud backup",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RestoreCloudBackupRequest"
                        },
                        "in": "body",
                        "description": "Restore Cloud Backup Request",
                        "name": "user"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Restore cloud backup",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "restore-cloud-backup"
            }
        },
        "/referral/{id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteInvitationResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Delete a referral code",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Referral Code ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Delete a referral code",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-referral"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RevokeInviteCodeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Get the referral code status",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Referral Code ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Get the referral code status",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-referral-status"
            }
        },
        "/auth/google/login": {
            "get": {
                "responses": {
                    "200": {
                        "description": "redirect to google oauth login page",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Login with Google OAuth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login with Google OAuth",
                "consumes": [
                    "application/json"
                ],
                "operationId": "google-oauth-login"
            }
        },
        "/setting/socialMedia/link": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "Add linked social media accounts",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddLinkedSocialMedia"
                        },
                        "in": "body",
                        "description": "The linked social media metadata includes platform and username",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Add linked social media accounts",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "add-linked-social-media"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "Remove linked social media accounts",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RemoveLinkedSocialMedia"
                        },
                        "in": "body",
                        "description": "The linked social media platform name",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Remove linked social media accounts",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "remove-linked-social-media"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "List linked social media accounts",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "List linked social media accounts",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-linked-social-media"
            }
        },
        "/auth/email/generate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Email verification was sent to user email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Generate email verification passcode and send passcode to user email",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GenerateEmailPasscodeRequest"
                        },
                        "in": "body",
                        "description": "Email",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate email verification passcode",
                "consumes": [
                    "application/json"
                ],
                "operationId": "email-generate"
            }
        },
        "/friend/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.FriendRequestResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query friends of requester",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Query friends of requester",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-friends"
            }
        },
        "/auth/refresh": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RefreshTokenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Refresh access token",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RefreshTokenRequest"
                        },
                        "in": "body",
                        "description": "Client refresh token",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "consumes": [
                    "application/json"
                ],
                "operationId": "refresh-access-token"
            }
        },
        "/account/addBackup": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AddCloudBackupResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Add cloud backup",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddCloudBackupRequest"
                        },
                        "in": "body",
                        "description": "Add cloud backup request contains user identifier and passcode",
                        "name": "user"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add cloud backup",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "add-cloud-backup"
            }
        },
        "/referral/acceptor": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetInvitationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "View referral status by acceptor",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "View referral status by acceptor",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "view-referral-status-by-acceptor"
            }
        },
        "/friend/{id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Remove a friend by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Remove a friend by ID",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-friend"
            }
        },
        "/account": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                },
                "description": "Create a user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "RegistrationSession",
                        "name": "RegistrationSession"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserRequest"
                        },
                        "in": "body",
                        "description": "Create user request contains username, password and etc.",
                        "name": "user"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user resource",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "create-user"
            }
        },
        "/referral/list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListInvitationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "List all invite codes of a user",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "List all invite codes of a user",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-invitations"
            }
        },
        "/auth/email/verify": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RegistrationSessionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Verify email passcode",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VerifyEmailPasscodeRequest"
                        },
                        "in": "body",
                        "description": "Passcode",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify email passcode",
                "consumes": [
                    "application/json"
                ],
                "operationId": "email-verify"
            }
        },
        "/request/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.FriendRequestResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query friend requests of an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Query friend requests of an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-friend-request"
            }
        },
        "/auth/resetPassword": {
            "post": {
                "responses": {
                    "200": {
                        "description": "reset password successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "reset password code is used or expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "description": "Reset password API resets user password by using the password reset token",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "type": "string",
                        "description": "The password reset code allows user to reset password",
                        "name": "code"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ResetUserPasswordRequest"
                        },
                        "in": "body",
                        "description": "Reset user password API request contains the new password and its confirmed password",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset password",
                "consumes": [
                    "application/json"
                ],
                "operationId": "reset-password"
            }
        },
        "/account/downloadProfile": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Download user profile picture",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Download user profile picture",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "download-profile"
            }
        },
        "/activity": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.ActivityResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "List activities of an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "List activities of an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-activities"
            }
        },
        "/transaction/query/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.TransactionResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query requester's transactions by page",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Query requester's transactions by page",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-transactions"
            }
        },
        "/request/confirm/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FriendRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Confirm a friend request by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateFriendStatusRequest"
                        },
                        "in": "body",
                        "description": "Notification ID",
                        "name": "friend_status_request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Confirm a friend request by ID",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "confirm-friend-request"
            }
        },
        "/setting/device": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListDevicesResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "List devices",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "List devices",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-devices"
            }
        },
        "/address/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AddressResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Update an addresses",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAddressRequest"
                        },
                        "in": "body",
                        "description": "Address Data",
                        "name": "address"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Update an address",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "update-address"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AddressResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Delete an addresses by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Delete an address by ID",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-address"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AddressResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Get an address",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get an address",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-address"
            }
        },
        "/transaction/user/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.TransactionResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "List all transactions of an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List all transactions of an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-transactions-by-user"
            }
        },
        "/auth/forgetPassword/{email}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "reset password link has been sent to request email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "target resource is not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid email",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "description": "Forget password API sends a password reset link to user email",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Request email address for password reset",
                        "name": "email"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Forget password",
                "consumes": [
                    "application/json"
                ],
                "operationId": "forget-password"
            }
        },
        "/account/deactivate": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Deactivate a user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserStatusRequest"
                        },
                        "in": "body",
                        "description": "Update user status request metadata",
                        "name": "UpdateUserStatusRequest"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Deactivate a user resource",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "deactivate-user"
            }
        },
        "/address/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.AddressesResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query addresses of an account by pages",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Query addresses of an account by pages",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-addresses-by-page"
            }
        },
        "/referral/revoke": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RevokeInviteCodeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Revoke a referral code",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Referral Code ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Revoke a referral code",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "revoke-referral-code"
            }
        },
        "/notification/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.ListNotificationResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query notifications of an account by pages",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Query notifications of an account by pages",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-notifications-by-page"
            }
        },
        "/friend/query/user/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.UserResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query friend of a user",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Query friend of a user",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-friend-request-of-user"
            }
        },
        "/auth/login": {
            "post": {
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Login an account",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginUserRequest"
                        },
                        "in": "body",
                        "description": "Login Data",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login an account",
                "consumes": [
                    "application/json"
                ],
                "operationId": "login"
            }
        },
        "/request/{id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Drop a friend request by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateFriendStatusRequest"
                        },
                        "in": "body",
                        "description": "Notification ID",
                        "name": "friend_status_request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Drop a friend request by ID",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "drop-friend-request"
            }
        },
        "/account/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Update a user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserRequest"
                        },
                        "in": "body",
                        "description": "User Update Data",
                        "name": "user"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user resource",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "update-user"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Delete a user resource by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "Refresh token to be invalidated",
                        "name": "RefreshToken"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user resource by ID",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-user"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Get a user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user resource",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-user"
            }
        },
        "/auth/revoke": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Revoke token",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RevokeTokenRequest"
                        },
                        "in": "body",
                        "description": "Revoke token data",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Revoke token",
                "consumes": [
                    "application/json"
                ],
                "operationId": "revoke-token"
            }
        },
        "/transaction/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Get a transaction",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get a transaction",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-transaction"
            }
        },
        "/activity/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.Post"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query activities of an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "Query activities of an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-activities"
            }
        },
        "/setting/socialMedia/link/{platform}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "Get linked social media accounts",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get linked social media accounts",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-linked-social-media"
            }
        },
        "/address/recipient/:id": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.AddressResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Get addresses of a recipient",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID of recipient",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get addresses of a recipient",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-addresses-of-recipient"
            }
        },
        "/referral/count/left": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetLeftInvitationNumberResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Count rest of the available referral codes",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Count rest of the available referral codes",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "count-left-referral"
            }
        },
        "/search/user/{keyword}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.UserResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Search users by keyword",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Keyword Data",
                        "name": "keyword"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search users by keyword",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "search-users"
            }
        },
        "/auth/username/validate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UsernameVerificationResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Validate whether username is unique",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UsernameVerificationRequest"
                        },
                        "in": "body",
                        "description": "Email",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate whether username is unique",
                "consumes": [
                    "application/json"
                ],
                "operationId": "username-validate"
            }
        },
        "/account/uploadProfile": {
            "post": {
                "responses": {
                    "200": {
                        "description": "image url",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Upload user profile picture",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Upload user profile picture",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "upload-profile"
            }
        },
        "/referral/nextAvailable": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetNextInviteAvailableTimeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Next invite available time",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetNextInviteAvailableTimeRequest"
                        },
                        "in": "body",
                        "description": "Timezone information",
                        "name": "address"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Next invite available time",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "next-invite-available-time"
            }
        },
        "/whitelist/name/{name}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.WhitelistUserInfo"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Get whitelist user records by name",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Name",
                        "name": "email"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Get whitelist user records by name",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-record-by-name"
            }
        },
        "/referral/create": {
            "get": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.CreateInviteCodeResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Create a referral code",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Create a referral code",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "create-referral-code"
            }
        },
        "/friend/list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.FriendRequestResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "List friends of requester",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "List friends of requester",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-friends"
            }
        },
        "/whitelist/{id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.WhitelistUserInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Delete a whitelist user record",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Whitelist Record ID",
                        "name": "ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Delete a whitelist user record",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-whitelist-user"
            }
        },
        "/transaction": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Update a transaction",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateTransactionRequest"
                        },
                        "in": "body",
                        "description": "Transaction Data",
                        "name": "transaction"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update a transaction",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "update-transaction"
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Add a transaction to account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddTransactionRequest"
                        },
                        "in": "body",
                        "description": "Transaction Data",
                        "name": "transaction"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Add a transaction to account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "add-transaction"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Delete a transaction",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Delete a transaction",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-transaction"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.TransactionResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "List all transactions of requester",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List all transactions of requester",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-transactions"
            }
        },
        "/auth/logout": {
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/api.LogoutUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Log out an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LogoutUserRequest"
                        },
                        "in": "body",
                        "description": "Device Information",
                        "name": "request"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "Refresh Token to be invalidated",
                        "name": "refresh_token"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "logout"
            }
        },
        "/account/self": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Get self user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get self user resource",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-self"
            }
        },
        "/notification/{id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteNotificationResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Delete notifications",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Delete notification",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "delete-notifications"
            }
        },
        "/notification/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListNotificationResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "List notifications",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "List notifications",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-notifications"
            }
        },
        "/request": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.FriendRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Add friendship with another user",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddFriendRequest"
                        },
                        "in": "body",
                        "description": "FriendRequest Data",
                        "name": "friend_request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Add friend",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "add-friend"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.FriendRequestResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "List friend requests of an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "List friend requests of an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-friend-request"
            }
        },
        "/whitelist/email/generate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Email verification was sent to user email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Generate email verification passcode and send passcode to user email",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GenerateEmailPasscodeRequest"
                        },
                        "in": "body",
                        "description": "Email",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Generate email verification passcode",
                "consumes": [
                    "application/json"
                ],
                "operationId": "whitelist-email-generate"
            }
        },
        "/account/security/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Update the password for a user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "UserID"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserPasswordRequest"
                        },
                        "in": "body",
                        "description": "Update password request metadata",
                        "name": "UpdateUserPasswordRequest"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update the password for a user resource",
                "consumes": [
                    "application/json"
                ],
                "operationId": "update-password"
            }
        },
        "/whitelist/phone/{phone}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.WhitelistUserInfo"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Get whitelist user records by phone",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Phone Number",
                        "name": "phone"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Get whitelist user records by phone",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "get-record-by-phone"
            }
        },
        "/referral/count/accept": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAcceptedReferralResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Count the accepted referral codes",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Count the accepted referral codes",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "count-accepted-referral"
            }
        },
        "/auth/google/callback": {
            "get": {
                "responses": {
                    "200": {
                        "description": "redirect to google oauth login page",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Google OAuth callback",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Google OAuth callback",
                "consumes": [
                    "application/json"
                ],
                "operationId": "google-oauth-callback"
            }
        },
        "/request/follow": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.FollowResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Follow friend",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Other User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Follow friend",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "follow-friend"
            }
        },
        "/whitelist/query": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.WhitelistUserInfo"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Query all whitelist user records",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page number",
                        "name": "page"
                    },
                    {
                        "in": "query",
                        "type": "string",
                        "description": "page size",
                        "name": "per_page"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Query all whitelist user records",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "query-records"
            }
        },
        "/request/reject/{id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FriendRequestResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Reject a friend request by ID",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateFriendStatusRequest"
                        },
                        "in": "body",
                        "description": "Notification ID",
                        "name": "friend_status_request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Reject a friend request by ID",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "reject-friend-request"
            }
        },
        "/friend/list/user/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.UserResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "List friend of a user",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "User ID",
                        "name": "id"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "List friend of a user",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-friend-request-of-user"
            }
        },
        "/address": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.AddressResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Add an address to account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddAddressRequest"
                        },
                        "in": "body",
                        "description": "Address Data",
                        "name": "address"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Add an address to account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "add-address"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.AddressesResponse"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "List addresses of an account",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "List addresses of an account",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-addresses"
            }
        },
        "/referral/accept": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AcceptInviteResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "description": "Accept a referral code",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AcceptInviteRequest"
                        },
                        "in": "body",
                        "description": "Referral Code Data",
                        "name": "accept_invite_request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "referral"
                ],
                "summary": "Accept a referral code",
                "consumes": [
                    "application/json"
                ],
                "operationId": "accept-referral"
            }
        },
        "/whitelist": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.WhitelistUserInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Create a whitelist user record",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "RegistrationSession",
                        "name": "RegistrationSession"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateWhiteListUserInfoRequest"
                        },
                        "in": "body",
                        "description": "Record Data",
                        "name": "record"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Create a whitelist user record",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "create-whitelist-user"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/api.WhitelistUserInfo"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "List all whitelist user records",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "List all whitelist user records",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "list-records"
            }
        },
        "/account/activate": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "description": "Activate a user resource",
                "parameters": [
                    {
                        "required": true,
                        "in": "header",
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserStatusRequest"
                        },
                        "in": "body",
                        "description": "Update user status request metadata",
                        "name": "UpdateUserStatusRequest"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Activate a user resource",
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "operationId": "activate-user"
            }
        },
        "/whitelist/email/verify": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RegistrationSessionResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "Verify email passcode",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VerifyEmailPasscodeRequest"
                        },
                        "in": "body",
                        "description": "Verify information",
                        "name": "request"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "Verify email passcode",
                "consumes": [
                    "application/json"
                ],
                "operationId": "whitelist-email-verify"
            }
        }
    },
    "definitions": {
        "api.RevokeInviteCodeResponse": {
            "type": "object",
            "properties": {
                "left_invite_number": {
                    "type": "integer"
                },
                "invite_code": {
                    "$ref": "#/definitions/entity.InviteCode"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "valid": {
                    "type": "boolean",
                    "description": "Valid is true if Time is not NULL"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "api.ListDevicesResponse": {
            "type": "object",
            "properties": {
                "devices": {
                    "items": {
                        "$ref": "#/definitions/api.DeviceInfo"
                    },
                    "type": "array"
                }
            }
        },
        "api.LogoutUserResponse": {
            "type": "object",
            "properties": {
                "device": {
                    "$ref": "#/definitions/api.DeviceInfo"
                }
            }
        },
        "api.VerifyEmailPasscodeRequest": {
            "required": [
                "email",
                "passcode"
            ],
            "type": "object",
            "properties": {
                "passcode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.LogoutUserRequest": {
            "type": "object",
            "properties": {
                "device_info": {
                    "$ref": "#/definitions/api.DeviceInfo"
                }
            }
        },
        "api.UpdateUserStatusRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.AcceptInviteResponse": {
            "type": "object",
            "properties": {
                "invitation": {
                    "$ref": "#/definitions/entity.InviteCode"
                }
            }
        },
        "api.GetInvitationResponse": {
            "type": "object",
            "properties": {
                "invitation": {
                    "$ref": "#/definitions/entity.InviteCode"
                }
            }
        },
        "api.AddAddressRequest": {
            "required": [
                "blockchain",
                "name",
                "pubkey",
                "symbol"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                },
                "is_primary": {
                    "type": "boolean"
                },
                "symbol": {
                    "minLength": 1,
                    "type": "string",
                    "maxLength": 10
                },
                "blockchain": {
                    "enum": [
                        "bitcoin",
                        "ethereum",
                        "solana",
                        "polygon",
                        "binance"
                    ],
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "pubkey": {
                    "type": "string"
                }
            }
        },
        "entity.SocialMedia": {
            "type": "object",
            "properties": {
                "user_refer": {
                    "type": "integer"
                },
                "social_media": {
                    "type": "string"
                },
                "social_media_username": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                }
            }
        },
        "api.DeleteInvitationResponse": {
            "type": "object",
            "properties": {
                "deleted_invitation": {
                    "$ref": "#/definitions/entity.InviteCode"
                }
            }
        },
        "api.RevokeTokenRequest": {
            "required": [
                "token"
            ],
            "type": "object",
            "properties": {
                "token_type_hint": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "api.GetLeftInvitationNumberResponse": {
            "type": "object",
            "properties": {
                "left_invite_number": {
                    "type": "integer"
                }
            }
        },
        "entity.Device": {
            "type": "object",
            "properties": {
                "device_token": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "device_model": {
                    "type": "string"
                },
                "user_refer": {
                    "type": "integer"
                },
                "is_disabled": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "os": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                }
            }
        },
        "api.RegistrationSessionResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.AddressesResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "items": {
                        "$ref": "#/definitions/entity.Address"
                    },
                    "type": "array"
                }
            }
        },
        "api.LoginUserRequest": {
            "required": [
                "login_info",
                "password"
            ],
            "type": "object",
            "properties": {
                "login_info": {
                    "type": "string"
                },
                "device_info": {
                    "$ref": "#/definitions/api.DeviceInfo"
                },
                "password": {
                    "minLength": 8,
                    "type": "string"
                }
            }
        },
        "api.ActivityResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "items": {
                        "$ref": "#/definitions/api.Post"
                    },
                    "type": "array"
                }
            }
        },
        "api.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "expires": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api.Transaction": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "receiver_url": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "integer"
                },
                "sender_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "receiver_username": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "blockchain": {
                    "type": "string"
                },
                "receiver_pk": {
                    "type": "string"
                },
                "sender_username": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "sender_pk": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "transaction_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.RestoreCloudBackupResponse": {
            "type": "object",
            "properties": {
                "last_access": {
                    "type": "string"
                },
                "backup_name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "entity.CloudBackup": {
            "required": [
                "name",
                "passcode",
                "secret"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "last_access_time": {
                    "type": "string"
                },
                "user_refer": {
                    "type": "integer"
                },
                "secret": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "passcode": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                }
            }
        },
        "api.AddTransactionRequest": {
            "required": [
                "amount",
                "blockchain",
                "name",
                "show_type",
                "symbol"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "blockchain": {
                    "type": "string"
                },
                "receiver_pk": {
                    "type": "string"
                },
                "show_type": {
                    "enum": [
                        "Public",
                        "Private",
                        "Friend"
                    ],
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "sender_pk": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "maxLength": 200
                },
                "transaction_type": {
                    "type": "string"
                }
            }
        },
        "entity.News": {
            "required": [
                "source",
                "title",
                "url"
            ],
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "preview_url": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "preview_name": {
                    "type": "string"
                },
                "preview_description": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "preview_image": {
                    "type": "string"
                }
            }
        },
        "api.UpdateAddressRequest": {
            "type": "object",
            "properties": {
                "is_primary": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "api.AcceptInviteRequest": {
            "required": [
                "code"
            ],
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.Moment": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "user_ref": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.DeviceInfo": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "api.FriendRequestResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "receiver_ref": {
                    "type": "integer"
                },
                "receiver_url": {
                    "type": "string"
                },
                "creatr_url": {
                    "type": "string"
                },
                "creator_ref": {
                    "type": "integer"
                },
                "creator_username": {
                    "type": "string"
                },
                "receiver_username": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "entity.Notification": {
            "required": [
                "actor_type",
                "device_id",
                "title",
                "type",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "template_id": {
                    "type": "integer"
                },
                "actor_type": {
                    "type": "integer"
                },
                "actor_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                }
            }
        },
        "api.RefreshTokenRequest": {
            "required": [
                "grant_type",
                "refresh_token"
            ],
            "type": "object",
            "properties": {
                "client_secret": {
                    "type": "string"
                },
                "grant_type": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                }
            }
        },
        "api.UpdateUserPasswordRequest": {
            "required": [
                "password"
            ],
            "type": "object",
            "properties": {
                "password": {
                    "minLength": 8,
                    "type": "string"
                }
            }
        },
        "api.AddCloudBackupResponse": {
            "type": "object",
            "properties": {
                "last_access": {
                    "type": "string"
                },
                "backup_name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "entity.InviteCode": {
            "required": [
                "code",
                "expired_at",
                "owner",
                "owner_ref",
                "status"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "enum": [
                        "Initialized",
                        "Accepted",
                        "Used",
                        "Revoked"
                    ],
                    "type": "string"
                },
                "accepted_user_id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "acceptor_phone": {
                    "type": "string"
                },
                "acceptor_email": {
                    "type": "string"
                },
                "owner_ref": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "expired_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "acceptor_username": {
                    "type": "string"
                }
            }
        },
        "api.ListNotificationResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "items": {
                        "$ref": "#/definitions/entity.Notification"
                    },
                    "type": "array"
                }
            }
        },
        "api.UsernameVerificationRequest": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "api.ListInvitationResponse": {
            "type": "object",
            "properties": {
                "left_invite_number": {
                    "type": "integer"
                },
                "invitations": {
                    "items": {
                        "$ref": "#/definitions/entity.InviteCode"
                    },
                    "type": "array"
                }
            }
        },
        "entity.Address": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                },
                "blockchain": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "pubkey": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                }
            }
        },
        "api.UserResponse": {
            "required": [
                "phone"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "social_media": {
                    "items": {
                        "$ref": "#/definitions/entity.SocialMedia"
                    },
                    "type": "array"
                },
                "cloud_backups": {
                    "items": {
                        "$ref": "#/definitions/entity.CloudBackup"
                    },
                    "type": "array"
                },
                "display_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "expires": {
                    "type": "integer"
                },
                "is_disabled": {
                    "type": "boolean"
                },
                "devices": {
                    "items": {
                        "$ref": "#/definitions/entity.Device"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "bios": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "friend_status": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                }
            }
        },
        "api.AddressResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/entity.Address"
                }
            }
        },
        "api.CreateInviteCodeResponse": {
            "type": "object",
            "properties": {
                "left_invite_number": {
                    "type": "integer"
                },
                "invite_code": {
                    "$ref": "#/definitions/entity.InviteCode"
                }
            }
        },
        "api.Post": {
            "type": "object",
            "properties": {
                "moment": {
                    "$ref": "#/definitions/api.Moment"
                },
                "transaction": {
                    "$ref": "#/definitions/api.Transaction"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.DeleteNotificationResponse": {
            "type": "object",
            "properties": {
                "notification": {
                    "$ref": "#/definitions/entity.Notification"
                }
            }
        },
        "api.AddFriendRequest": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.UpdateFriendStatusRequest": {
            "type": "object",
            "properties": {
                "notification_id": {
                    "type": "string"
                }
            }
        },
        "api.GenerateEmailPasscodeRequest": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api.GetAcceptedReferralResponse": {
            "type": "object",
            "properties": {
                "accepted_invitations": {
                    "type": "integer"
                }
            }
        },
        "api.RemoveLinkedSocialMedia": {
            "type": "object",
            "properties": {
                "social_media": {
                    "type": "string"
                }
            }
        },
        "api.WhitelistUserInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                }
            }
        },
        "api.RestoreCloudBackupRequest": {
            "required": [
                "backup_name",
                "passcode",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "passcode": {
                    "type": "string"
                },
                "backup_name": {
                    "type": "string"
                },
                "user_id": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "api.CreateUserRequest": {
            "required": [
                "email",
                "password",
                "username"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                },
                "display_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "phone": {
                    "type": "string"
                },
                "bios": {
                    "type": "string"
                },
                "device_info": {
                    "$ref": "#/definitions/api.DeviceInfo"
                },
                "avatar": {
                    "type": "string"
                },
                "password": {
                    "minLength": 8,
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.FollowResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "api.GetNextInviteAvailableTimeResponse": {
            "type": "object",
            "properties": {
                "next_available_time": {
                    "type": "string"
                }
            }
        },
        "api.GetNextInviteAvailableTimeRequest": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                }
            }
        },
        "api.AddLinkedSocialMedia": {
            "type": "object",
            "properties": {
                "social_media": {
                    "type": "string"
                },
                "social_media_username": {
                    "type": "string"
                }
            }
        },
        "api.TransactionResponse": {
            "type": "object",
            "properties": {
                "transaction": {
                    "$ref": "#/definitions/api.Transaction"
                }
            }
        },
        "api.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 30
                },
                "bios": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "api.AddCloudBackupRequest": {
            "required": [
                "backup_name",
                "passcode",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "passcode": {
                    "type": "string"
                },
                "backup_name": {
                    "type": "string"
                },
                "user_id": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "api.ResetUserPasswordRequest": {
            "required": [
                "confirm_password",
                "password"
            ],
            "type": "object",
            "properties": {
                "confirm_password": {
                    "minLength": 8,
                    "type": "string"
                },
                "password": {
                    "minLength": 8,
                    "type": "string"
                }
            }
        },
        "api.UpdateTransactionRequest": {
            "required": [
                "name",
                "show_type"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "maxLength": 200
                },
                "name": {
                    "type": "string"
                },
                "show_type": {
                    "enum": [
                        "Public",
                        "Private",
                        "Friend"
                    ],
                    "type": "string"
                }
            }
        },
        "api.UsernameVerificationResponse": {
            "type": "object",
            "properties": {
                "unique": {
                    "type": "boolean"
                }
            }
        },
        "api.CreateWhiteListUserInfoRequest": {
            "required": [
                "email",
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "minLength": 2,
                    "type": "string",
                    "maxLength": 30
                },
                "discord": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        }
    }
}